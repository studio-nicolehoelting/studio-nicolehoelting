---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import sanitizeHtml from "sanitize-html";
import markdownIt from "markdown-it";

type Project = CollectionEntry<"projects">;

interface Props {
    project: Project;
}

const { project } = Astro.props;

const parser = new markdownIt({
    html: true,
    linkify: true,
});
---

<swiper-slide>
    <div class="container einleitung">
        <div class="img">
            <Image
                src={project.data.einleitung.bild}
                alt={project.data.einleitung.bildtext ?? ""}
                quality="mid"
            />
        </div>
        <div class="mainText">
            <Fragment
                set:html={sanitizeHtml(
                    parser.render(project.data.einleitung.text)
                )}
            />
        </div>
        <div
            class="balkenLinks"
            style={`background-color: ${project.data.einleitung.primärfarbe};`}
        >
        </div>
        <div
            class="balkenRechts"
            style={`background-color: ${project.data.einleitung.sekundärfarbe};`}
        >
        </div>
    </div>
</swiper-slide>
{
    project.data.slides &&
        project.data.slides.map((slide) => (
            <swiper-slide>
                <div class="container">
                    {slide.text && (
                        <div class="mainText">
                            <Fragment set:html={parser.render(slide.text)} />
                        </div>
                    )}
                    {slide.bilder &&
                        slide.bilder.map((bild, index) => (
                            <div class="img">
                                <Image
                                    src={bild}
                                    alt="Ergebnisbild"
                                    quality="mid"
                                />
                            </div>
                        ))}
                </div>
            </swiper-slide>
        ))
}

<style lang="scss">
    swiper-slide {
        height: 100%;
    }

    .container {
        width: 100%;
        height: 100%;
        padding: 10px 50px;
        display: grid;

        grid-gap: 10px;
        grid-auto-flow: column;

        &.einleitung {
            grid-template-columns: repeat(4, auto);
            grid-template-areas: "image mainText balkenLinks balkenRechts";
            grid-auto-flow: unset;

            @media (max-width: $mobile_max_width) {
                grid-template-columns: 1fr auto auto;
                grid-template-rows: 1fr 2fr;
                grid-template-areas:
                    "image balkenLinks balkenRechts"
                    "mainText mainText mainText";
                justify-items: center;
            }

            .mainText {
                grid-area: mainText;
            }
            .img {
                grid-area: image;
            }
        }

        @media (max-width: $mobile_max_width) {
            grid-auto-flow: row;
        }

        .mainText {
            &,
            :global(*) {
                color: white;
            }

            margin-left: 15px;
            max-width: 100%;
            max-height: 100%;
            overflow-y: auto;
            padding-right: 0.25cm;
        }

        .img {
            height: 100%;
            max-width: 100%;
            overflow: hidden;

            @media (max-width: $mobile_max_width) {
                display: flex;
                justify-content: center;
            }

            img {
                height: 100%;
                width: auto;
                object-fit: contain;
            }
        }

        .balkenLinks,
        .balkenRechts {
            // margin-left: 15px;
            height: 100%;
            width: 1cm;
        }

        .balkenLinks {
            background-color: #000;
            grid-area: balkenLinks;
        }
        .balkenRechts {
            background-color: #fff;
            grid-area: balkenRechts;
        }
    }
</style>
