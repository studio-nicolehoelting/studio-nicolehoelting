---
import { Icon } from "astro-icon/components";
import ThemeToggleButton from "./ThemeToggleButton.astro";

const menu = [
    ["/projects/", "projects"],
    ["/services/", "services"],
    ["/about/", "about"],
    ["/contact/", "contact"],
    ["/blog/", "blog"],
];
---

<nav id="navbar">
    <div class="logo-container">
        <a href="/"><span class="logo-text">Nicole Hoelting</span></a>
    </div>
    <button class="mobile-nav-toggle" aria-label="Toggle navigation bar"
        ><Icon name="fa:bars" /></button
    >
    <ul>
        {
            menu.map(([link, name]) => {
                if (Astro.url.pathname === link) {
                    return (
                        <li class="element active">
                            <span>{name}</span>
                        </li>
                    );
                }
                return (
                    <li class="element">
                        <a href={link}>{name}</a>
                    </li>
                );
            })
        }
        <li class="element">
            <ThemeToggleButton />
        </li>
    </ul>
</nav>

<style lang="scss">
    :global(:root) {
        position: relative;
    }

    :global(body) {
        max-width: 100vw;
        overflow-x: hidden;
        overflow-x: clip;
    }

    #navbar {
        box-sizing: border-box;
        margin: 0px;
        padding: 0px;
        max-width: 100%;
        display: grid;
        grid-template-columns: 1fr auto;
        grid-template-rows: auto auto;
        grid-template-areas: "logo" "nav";
        align-items: center;
        z-index: 10;

        @media (min-width: $breakpoint-s) {
            grid-template-columns: auto 1fr;
            grid-template-rows: auto;
            grid-template-areas: "logo nav";
        }

        ul {
            max-width: 100%;
            display: flex;
            grid-area: nav;

            flex-direction: column;
            flex-wrap: nowrap;
            justify-content: flex-start;
            position: absolute;
            inset: 0 0 0 30%;
            padding: 0 2em;
            padding-top: min(20vh, 10rem);
            z-index: 99;
            overflow-y: auto;
            transform: translateX(100%);
            transition: transform 200ms ease-in-out;
            background-color: var(--logo-color);
            background-color: color-mix(in srgb, var(--logo-color) 90%, black);

            @supports (backdrop-filter: blur(1rem)) and
                (
                    background-color:
                        color-mix(in srgb, var(--logo-color) 80%, transparent)
                ) {
                background-color: color-mix(
                    in srgb,
                    var(--logo-color) 70%,
                    transparent
                );
                backdrop-filter: blur(1rem);
            }

            @media (min-width: $breakpoint-s) {
                margin-inline: 5px;
                padding-top: 0;
                background-color: transparent;
                position: initial;
                flex-direction: row;
                flex-wrap: wrap;
                justify-content: flex-end;
                inset: initial;
                z-index: initial;
                overflow-y: initial;
                transform: initial;
                transition: initial;
                backdrop-filter: initial;
            }

            &.mobile-visible {
                transform: translateX(0%);
            }

            .element {
                padding: 5px;
                margin-bottom: 0.5rem;
                transition: all 100ms;
                font-size: 1.5rem;
                text-align: center;
                background-color: var(--logo-color);

                @media (min-width: $breakpoint-s) {
                    padding: 3px 10px;
                    margin-bottom: 0;
                    background-color: transparent;
                }

                & > :is(a, span) {
                    display: block;
                    width: 100%;
                    border-bottom: 1px transparent solid;

                    &:hover {
                        text-decoration: none;
                        border-bottom-color: var(--link-color);
                    }

                    @media (min-width: $breakpoint-s) {
                        display: initial;
                        width: initial;
                    }
                }

                &.active span {
                    border-bottom: 2px var(--link-color) solid;

                    * {
                        cursor: pointer;
                    }
                }
            }
            a {
                text-decoration: none;
            }

            li {
                list-style: none;
                margin-top: 5px;

                > span,
                > a {
                    color: var(--link-color);
                }
            }
        }

        .mobile-nav-toggle {
            aspect-ratio: 1;
            width: 3rem;
            margin: 1.5rem;
            z-index: 100;
            border: 2px black solid;
            display: block;
            background-color: var(--logo-color);
            color: unset;
            padding: 0.25rem;
            border-radius: 20%;

            &[aria-open="true"] {
                color: var(--highlight-color);
                border-color: var(--highlight-color);
            }

            svg {
                padding-top: 3px;
                :global(*) {
                    fill: black;
                }
            }

            @media (min-width: $breakpoint-s) {
                display: none;
            }
        }

        .logo-container {
            grid-area: logo;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 120px;

            @media (min-width: $breakpoint-s) {
                margin-left: 1em;
                height: 80px;
            }

            > a {
                height: 100%;
                text-decoration: none;

                :global(span.logo) {
                    width: min(100%, 300px);
                    height: 100%;
                    padding: 10px 15px;
                    margin-inline: auto;
                    overflow-y: hidden;
                    display: block;

                    @media (min-width: $breakpoint-s) {
                        margin: 0;
                    }
                }

                .logo-text {
                    color: var(--logo-color);
                    width: 100%;
                    display: block;
                    max-width: min(100%, 300px);
                    font-size: 2em;
                    height: 100%;
                    text-transform: uppercase;
                    white-space: nowrap;
                    align-content: center;
                    text-align: center;
                    line-height: 120px;

                    @media (min-width: $breakpoint-s) {
                        margin-inline: 0;
                        font-size: 3em;
                        line-height: 80px;
                    }
                }
            }
        }
    }
</style>

<script>
    function afterSwap() {
        const nav = document.querySelector("nav#navbar") as HTMLElement;
        const navToggle = nav.querySelector(
            ".mobile-nav-toggle"
        ) as HTMLButtonElement;
        const ul = nav.querySelector("ul")!;

        navToggle.addEventListener("click", () => {
            ul.classList.toggle("mobile-visible");
            navToggle.setAttribute(
                "aria-open",
                ul.classList.contains("mobile-visible").toString()
            );
        });
    }

    document.addEventListener("astro:after-swap", afterSwap);

    afterSwap();
</script>
